name: Gradle native image build

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }} with Java ${{ matrix.java-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        java-version: [17, 21]
        graalvm-distribution: ['liberica']
      fail-fast: false

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Verify Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up GraalVM ${{ matrix.graalvm-distribution }} for Java ${{ matrix.java-version }}
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.graalvm-distribution }}
          cache: 'gradle'

      - name: Set up a Developer Command Prompt for Microsoft Visual C++ (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Report Java version
        run: |
          java -version
          javac -version

      - name: Install libxi-dev in Linux
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libxi-dev

      - name: Build with Gradle Wrapper (Linux)
        run: |
          cd trunk/SwingSet3
          ./gradlew --no-daemon --info nativeCompile
        if: runner.os != 'Windows'

      - name: Build with Gradle Wrapper (Windows)
        run: |
          cd trunk\SwingSet3
          .\gradlew.bat --no-daemon --info nativeCompile
        if: runner.os == 'Windows'

      - name: Package Linux artifacts
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: SwingSet3 ${{ runner.os }} native image with SubstrateVM for Java ${{ matrix.java-version }}
          path: |
            trunk/SwingSet3/build/native/nativeCompile/
            !trunk/SwingSet3/build/native/nativeCompile/reports
            !trunk/SwingSet3/build/native/nativeCompile/sources

      - name: Package Windows artifacts
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: SwingSet3 ${{ runner.os }} native image with SubstrateVM for Java ${{ matrix.java-version }}
          path: |
            trunk/SwingSet3/build/native/nativeCompile/
            !trunk/SwingSet3/build/native/nativeCompile/native-image-*.args
            !trunk/SwingSet3/build/native/nativeCompile/reports
            !trunk/SwingSet3/build/native/nativeCompile/sources

